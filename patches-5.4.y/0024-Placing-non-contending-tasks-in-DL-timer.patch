From 74c33040e1abff784f2bc77c1f23230c703ead31 Mon Sep 17 00:00:00 2001
From: Gabriele Ara <gabriele.ara@santannapisa.it>
Date: Fri, 2 Dec 2022 13:58:32 +0000
Subject: Placing non contending tasks in DL timer

---
 kernel/sched/deadline.c | 16 ++++++----------
 1 file changed, 6 insertions(+), 10 deletions(-)

diff --git a/kernel/sched/deadline.c b/kernel/sched/deadline.c
index 279355b4246b..5519cfc5400c 100644
--- a/kernel/sched/deadline.c
+++ b/kernel/sched/deadline.c
@@ -982,7 +982,7 @@ static int start_dl_timer(struct task_struct *p)
 }
 
 static int
-select_task_rq_dl(struct task_struct *p, int cpu, int flags);
+select_task_rq_dl(struct task_struct *p, int cpu, int sd_flag, int flags);
 /*
  * This is the bandwidth enforcement timer callback. If here, we know
  * a task is not on its dl_rq, since the fact that the timer was running
@@ -1007,7 +1007,7 @@ static enum hrtimer_restart dl_task_timer(struct hrtimer *timer)
 	int cpu;
 
 	raw_spin_lock_irqsave(&p->pi_lock, rf.flags);
-	cpu = select_task_rq_dl(p, p->wake_cpu, 0);
+	cpu = select_task_rq_dl(p, p->wake_cpu, 0, 0);
 	if (task_cpu(p) != cpu) {
 		set_task_cpu(p, cpu);
 	}
@@ -1654,10 +1654,10 @@ select_task_rq_dl(struct task_struct *p, int cpu, int sd_flag, int flags)
 
 	rq = cpu_rq(cpu);
 
-	// TODO: Check if new deadline will be generated; if not, do nothing!
-	if (!p->dl.dl_non_contending) {
-		goto out;
-	}
+	// // TODO: Check if new deadline will be generated; if not, do nothing!
+	// if (!p->dl.dl_non_contending) {
+	// 	goto out;
+	// }
 
 	rcu_read_lock();
 
@@ -2215,10 +2215,6 @@ static int push_dl_task(struct rq *rq)
 	     node = pushable_dl_next(rq, node, &trycount)) {
 		next_task = pushable_dl_task(rq, node);
 
-		if (is_migration_disabled(next_task)) {
-			continue;
-		}
-
 		/* Do we want to push this task? */
 		if (rq->dl.this_bw <= rq->dl.max_bw && next_task->dl.dl_new == 0) {
 			continue;
-- 
2.40.0

