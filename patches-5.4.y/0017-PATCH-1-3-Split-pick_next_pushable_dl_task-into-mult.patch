From fbb12070790103816c5c27e6f7d1b92699740a58 Mon Sep 17 00:00:00 2001
From: Gabriele Ara <gabriele.ara@santannapisa.it>
Date: Tue, 22 Nov 2022 19:39:01 +0100
Subject: [PATCH 1/3] Split pick_next_pushable_dl_task() into multiple
 functions

They will be used in next patches
---
 kernel/sched/deadline.c | 27 ++++++++++++++++++++++-----
 1 file changed, 22 insertions(+), 5 deletions(-)

diff --git a/kernel/sched/deadline.c b/kernel/sched/deadline.c
index bdd8bcdd71ac..0161897fbaa6 100644
--- a/kernel/sched/deadline.c
+++ b/kernel/sched/deadline.c
@@ -2129,22 +2129,39 @@ static struct rq *find_lock_later_rq_ff(struct task_struct *task, struct rq *rq)
 	return later_rq;
 }
 
-static struct task_struct *pick_next_pushable_dl_task(struct rq *rq)
+static struct rb_node *pushable_dl_first(struct rq *rq)
 {
-	struct task_struct *p;
-
 	if (!has_pushable_dl_tasks(rq))
 		return NULL;
+	return rq->dl.pushable_dl_tasks_root.rb_leftmost;
+}
 
-	p = rb_entry(rq->dl.pushable_dl_tasks_root.rb_leftmost,
-		     struct task_struct, pushable_dl_tasks);
+static struct task_struct *pushable_dl_task_quick(struct rq *rq,
+						  struct rb_node *node)
+{
+	return rb_entry(node, struct task_struct, pushable_dl_tasks);
+}
 
+static void pushable_dl_task_checkbugs(struct rq *rq, struct task_struct *p)
+{
 	BUG_ON(rq->cpu != task_cpu(p));
 	BUG_ON(task_current(rq, p));
 	BUG_ON(p->nr_cpus_allowed <= 1);
 
 	BUG_ON(!task_on_rq_queued(p));
 	BUG_ON(!dl_task(p));
+}
+
+static struct task_struct *pick_next_pushable_dl_task(struct rq *rq)
+{
+	struct task_struct *p;
+
+	if (!has_pushable_dl_tasks(rq))
+		return NULL;
+
+	p = pushable_dl_task_quick(rq, pushable_dl_first(rq));
+
+	pushable_dl_task_checkbugs(rq, p);
 
 	return p;
 }
-- 
2.25.1

