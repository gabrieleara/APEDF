From e48896fd69c34fb329ae20ec58821ba9f2d5f7e7 Mon Sep 17 00:00:00 2001
From: Gabriele Ara <gabriele.ara@santannapisa.it>
Date: Mon, 13 Feb 2023 10:37:03 +0000
Subject: [PATCH 3/3] SCHEDUTIL: avoid using more frequency than necessary

---
 include/linux/sched/cpufreq.h    | 2 +-
 kernel/sched/cpufreq_schedutil.c | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/include/linux/sched/cpufreq.h b/include/linux/sched/cpufreq.h
index cc6bcc1e96bc..b130973c47c5 100644
--- a/include/linux/sched/cpufreq.h
+++ b/include/linux/sched/cpufreq.h
@@ -27,7 +27,7 @@ bool cpufreq_this_cpu_can_update(struct cpufreq_policy *policy);
 static inline unsigned long map_util_freq(unsigned long util,
 					unsigned long freq, unsigned long cap)
 {
-	return (freq + (freq >> 2)) * util / cap;
+	return (freq + (freq >> 4)) * util / cap;
 }
 #endif /* CONFIG_CPU_FREQ */
 
diff --git a/kernel/sched/cpufreq_schedutil.c b/kernel/sched/cpufreq_schedutil.c
index e002d91c353c..ff18a43528db 100644
--- a/kernel/sched/cpufreq_schedutil.c
+++ b/kernel/sched/cpufreq_schedutil.c
@@ -160,7 +160,7 @@ static void sugov_deferred_update(struct sugov_policy *sg_policy, u64 time,
  *
  * next_freq = C * curr_freq * util_raw / max
  *
- * Take C = 1.25 for the frequency tipping point at (util / max) = 0.8.
+ * Take C = 1.0625 for the frequency tipping point at (util / max) = 0.94117.
  *
  * The lowest driver-supported frequency which is equal or greater than the raw
  * next_freq (as calculated above) is returned, subject to policy min/max and
-- 
2.25.1

